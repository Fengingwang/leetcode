# You have a list of points in the plane. Return the area of the largest triangle
# that can be formed by any 3 of the points
# Input: points = [[0,0],[0,1],[1,0],[0,2],[2,0]]
# Output: 2
# Explanation:
# The five points are show in the figure below. The red triangle is the largest.
# 题目大意: 给出一组二维坐标，求这些点能组成的最大三角形面积。
# 解题方法
# 根据坐标求三角形面积是有公式的。知道公式结合python的组合公式很容易求出来最大的面积。另外要注意的是我们再求的时候要加上绝对值符号。
# S=(1/2)*(x1y2+x2y3+x3y1-x1y3-x2y1-x3y2)

class Solution:
    def largestTriangleArea(self, points):
        """
        :type points: List[List[int]]
        :rtype: float
        """
        def f(p1, p2, p3):
            (x1, y1), (x2, y2), (x3, y3) = p1, p2, p3
            return 0.5 * abs(x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2))
        return max(f(a, b, c) for a, b, c in itertools.combinations(points, 3))

# OR
# 利用海伦公式：
class Solution:
    def largestTriangleArea(self, points):
        """
        :type points: List[List[int]]
        :rtype: float
        """
        max_area = 0
        for i in range(len(points)-2):
            for j in range(i+1, len(points)-1):
                for k in range(j+1, len(points)):
                    max_area = max(max_area, self.area(points[i], points[j], points[k]))
        return max_area

    def area(self, a, b, c):
        a1 = ((a[0]-b[0])**2+(a[1]-b[1])**2)**0.5
        b1 = ((c[0]-b[0])**2+(c[1]-b[1])**2)**0.5
        c1 = ((a[0]-c[0])**2+(a[1]-c[1])**2)**0.5
        p = (a1+b1+c1)/2
        area = (p*abs(p-a1)*abs(p-b1)*abs(p-c1))**0.5
        return area
