# Find the kth largest element in an unsorted array. 
# Note that it is the kth largest element in the sorted order, not the kth distinct element.
# Given [3,2,1,5,6,4] and k = 2, return 5.
# Note: 
# You may assume k is always valid, 1 ≤ k ≤ array length.

# 解题思路：
# O(n)解法：快速选择（QuickSelect）算法，参考耶鲁大学关于QuickSelect算法的介绍
http://www.cs.yale.edu/homes/aspnes/pinewiki/QuickSelect.html

import random
class Solution:
    def findKthLargest(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        pivot = random.choice(nums)
        nums1, nums2 = [], []
        for num in nums:
            if num > pivot:
                nums1.append(num)
            elif num < pivot:
                nums2.append(num)
        if k <= len(nums1):
            return self.findKthLargest(nums1, k)
        if k > len(nums) - len(nums2):
            return self.findKthLargest(nums2, k - (len(nums) - len(nums2)))
        return pivot

# O(nlogn)解法：排序
class Solution:
    def findKthLargest(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        return sorted(nums, reverse=True)[k - 1]


# 找出第k大的数字。这个题可以直接排序，速度还挺快。我的做法是通过循环k-1次，每次都在列表中去除列表的最大值。注意，列表的remove每次只会移除一个值
class Solution(object):
    def findKthLargest(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        for i in range(k - 1):
            nums.remove(max(nums))
        return max(nums)
