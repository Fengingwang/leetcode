# Time:  O(n)
# Space: O(1)
# Given an integer array, find three numbers whose product is maximum and output the maximum product
# Input: [1,2,3]
# Output: 6
# Input: [1,2,3,4]
# Output: 24

# 思路： 
# 乘积最大值大致分两种情况： 
# a. 数组中最大的三个正数 
# b.数组中最小的两个负数和最大的正数
# 所以目标是找出数组的前三大的数和前2最小的数。然后比较乘积大小。

class Solution:
    def maximumProduct(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        nums.sort()
        return max(nums[-1] * nums[-2] * nums[-3], nums[0] * nums[1] * nums[-1])

class Solution(object):
    def maximumProduct(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        min1, min2 = float("inf"), float("inf")
        max1, max2, max3 = float("-inf"), float("-inf"), float("-inf")

        for n in nums:
            if n <= min1:
                min2 = min1
                min1 = n
            elif n <= min2:
                min2 = n

            if n >= max1:
                max3 = max2
                max2 = max1
                max1 = n
            elif n >= max2:
                max3 = max2
                max2 = n
            elif n >= max3:
                max3 = n
        return max(min1 * min2 * max1, max1 * max2 * max3)
