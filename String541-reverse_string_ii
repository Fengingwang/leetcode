# Time:  O(n)
# Space: O(1)
# Given a string and an integer k, you need to reverse the first k characters
# for every 2k characters counting from the start of the string
# If there are less than k characters left, reverse all of them
# If there are less than 2k but greater than or equal to k characters,
# then reverse the first k characters and left the other as original
# Input: s = "abcdefg", k = 2
# Output: "bacdfeg"
# 这题挺简单的，就是每隔k个字符就翻转k个字符
# For every block of 2k characters starting with position i, we want to replace S[i:i+k] with its reverse

class Solution(object):
    def reverseStr(self, s, k):
        """
        :type s: str
        :type k: int
        :rtype: str
        """
        s = list(s)
        for i in xrange(0, len(s), 2*k):
            s[i:i+k] = reversed(s[i:i+k])
        return "".join(s)

class Solution(object):
    def reverseStr(self, s, k):
        """
        :type s: str
        :type k: int
        :rtype: str
        """
        length = len(s)
        for i in range(0, length, 2*k):
            if i + k >= length:
                s = s[:i] + s[i:][::-1]
            else:
                s = s[:i] + s[i:i + k][::-1] + s[i + k:]
        return s
