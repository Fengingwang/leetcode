# Time:  O(n)
# Space: O(1)
# Given an integer n, return 1 - n in lexicographical order.
# For example, given 13, return: [1,10,11,12,13,2,3,4,5,6,7,8,9].
# Please optimize your algorithm to use less time and space.
# The input size may be as large as 5,000,000.
思路
题目的意思是输出一个按字典排列的数组。分三种情况处理: 
1、 1–>10 (10 <= n) 
2、 11–>12–>13 (13 <= n) 
3、 19 –> 2 (19 <= n)

class Solution(object):
    def lexicalOrder(self, n):
        """
        :type n: int
        :rtype: List[int]
        """
        res = []
        cur = 1
        for i in range(n):
            res.append(cur)
            if cur * 10 <= n:
                cur *= 10
            elif cur % 10 != 9 and cur + 1 <= n:
                cur += 1
            else:
                while (cur / 10) % 10 == 9:
                    cur /= 10
                cur = cur / 10 + 1
        return res
